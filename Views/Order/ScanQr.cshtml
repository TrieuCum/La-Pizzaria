@{
    ViewData["Title"] = "Đặt món bằng QR";
}

<div class="container mt-4">
    <h3 class="mb-3">@ViewData["Title"]</h3>
    <div class="alert alert-light border d-flex align-items-center" role="alert">
        <div>
            <div class="fw-semibold">Cách hoạt động</div>
            <div class="small text-muted">QR được nhà hàng dán trên bàn. Khách quét QR để mở trang này với mã bàn tự điền. Bạn cũng có thể nhập mã bàn thủ công dưới đây.</div>
        </div>
    </div>
    <div class="row g-3">
        <div class="col-md-4">
            <label class="form-label">Mã bàn (Table Code)</label>
            <input id="tableCode" class="form-control" placeholder="VD: T01" />
            <div class="mt-3">
                <div class="small text-muted mb-1">QR truy cập (chia sẻ đường dẫn này)</div>
                <div id="qrShare" class="border bg-white rounded p-2 d-inline-block"></div>
            </div>
        </div>
        <div class="col-md-8">
            <label class="form-label">Chọn món</label>
            <div class="row g-2 align-items-center">
                <div class="col-md-7">
                    <select id="productSelect" class="form-select"></select>
                </div>
                <div class="col-md-3">
                    <input id="qtyInput" type="number" class="form-control" min="1" value="1" />
                </div>
                <div class="col-md-2 d-grid">
                    <button id="addItem" class="btn btn-outline-primary" type="button">Thêm</button>
                </div>
            </div>
            <ul id="cart" class="list-group mt-2"></ul>
        </div>
    </div>
    <div class="mt-3 d-flex gap-2">
        <button id="btnSend" class="btn btn-brand-primary">Gửi đơn</button>
        <button id="btnPreview" class="btn btn-outline-secondary" type="button">Xem tạm tính</button>
    </div>
    <div class="mt-3" id="result"></div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
<script>
function getQueryParam(name){
    const params = new URLSearchParams(window.location.search);
    return params.get(name) || '';
}

document.getElementById('btnSend').addEventListener('click', async () => {
    const tableCode = document.getElementById('tableCode').value;
    let items = window.__cart || [];
    const res = await fetch('/Order/FromQr', {
        method: 'POST', headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ tableCode, items })
    });
    const data = await res.json();
    document.getElementById('result').innerText = 'Đã tạo đơn #' + (data.orderId ?? '');
});

document.getElementById('btnPreview').addEventListener('click', async () => {
    const tableCode = document.getElementById('tableCode').value;
    let items = window.__cart || [];
    const res = await fetch('/Order/Preview', {
        method: 'POST', headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ tableCode, items })
    });
    const data = await res.json();
    const combos = (data.combos || []).map(c => `${c.comboName}: -${(c.discountAmount||0).toLocaleString()}`).join('\n');
    document.getElementById('result').innerText = `Tạm tính: ${data.subtotal.toLocaleString()}\nGiảm giá: ${data.discount.toLocaleString()}\nTổng: ${data.total.toLocaleString()}\n${combos}`;
});

async function loadProducts() {
    const res = await fetch('/api/products');
    const data = await res.json();
    const sel = document.getElementById('productSelect');
    sel.innerHTML = '';
    window.__productMap = {};
    data.forEach(p => {
        const opt = document.createElement('option');
        opt.value = p.id; opt.innerHTML = `${p.name} — <span style='color:#da291c'>${p.price.toLocaleString()}đ</span>`;
        sel.appendChild(opt);
        window.__productMap[p.id] = p;
    });
}

window.__cart = [];
document.getElementById('addItem').addEventListener('click', () => {
    const pid = parseInt(document.getElementById('productSelect').value, 10) || 0;
    const qty = parseInt(document.getElementById('qtyInput').value, 10) || 1;
    if (!pid || qty <= 0) return;
    const p = window.__productMap[pid] || { name: `Product ${pid}`, price: 0 };
    window.__cart.push({ productId: pid, quantity: qty, name: p.name, price: p.price });
    const li = document.createElement('li');
    li.className = 'list-group-item d-flex justify-content-between align-items-center';
    const total = (p.price * qty) || 0;
    li.innerHTML = `<span>${p.name} x <strong>${qty}</strong></span><span class='fw-bold' style='color:#da291c'>${total.toLocaleString()}đ</span>`;
    document.getElementById('cart').appendChild(li);
});

// Prefill table code from URL and render a small QR to share the link
const host = window.location.origin;
const initialCode = getQueryParam('tableCode');
if (initialCode) {
    document.getElementById('tableCode').value = initialCode;
}
let shareQrInstance;
function renderShareQr(){
    const code = document.getElementById('tableCode').value || '';
    const url = `${host}/Order/ScanQr?tableCode=${encodeURIComponent(code)}`;
    const el = document.getElementById('qrShare');
    el.innerHTML = '';
    shareQrInstance = new QRCode(el, { text: url, width: 120, height: 120 });
}
document.getElementById('tableCode').addEventListener('input', renderShareQr);

loadProducts();
renderShareQr();
</script>


