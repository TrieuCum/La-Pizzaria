@{
    ViewData["Title"] = "Thống kê theo tuần";
    var from = (DateTime)ViewBag.From;
}

<h3>@ViewData["Title"]</h3>

<div class="d-flex align-items-center gap-2 mb-3">
    <a class="btn btn-sm btn-outline-dark" asp-action="Daily">Thống kê theo ngày</a>
    <a class="btn btn-sm btn-dark" asp-action="Weekly">Thống kê theo tuần</a>
    <div class="ms-auto small text-muted">Dọc: bảng chi tiết | Ngang: biểu đồ</div>
    </div>

<div class="row g-3 align-items-end mb-3">
    <div class="col-auto">
        <label class="form-label">Từ ngày</label>
        <input id="fromInput" type="date" class="form-control" value="@from.ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-auto">
        <label class="form-label">Đến ngày</label>
        <input id="toInput" type="date" class="form-control" value="@(((DateTime)ViewBag.To).ToString("yyyy-MM-dd"))" />
    </div>
    <div class="col-auto">
        <button id="btnLoad" class="btn btn-primary">Tải</button>
    </div>
    <div class="col-12">
        <div class="d-flex flex-wrap gap-2 mb-2">
            <span class="badge bg-primary" id="badgeRange">-</span>
            <span class="badge bg-success" id="badgeTotal">0đ</span>
        </div>
        <canvas id="weekChart" height="140"></canvas>
    </div>
    <div class="col-12">
        <div class="table-responsive">
            <table class="table table-sm table-striped align-middle" id="detailTable">
                <thead>
                    <tr>
                        <th>Ngày</th>
                        <th>Doanh thu</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
function formatDateOnly(d) {
    const y = d.getFullYear();
    const m = String(d.getMonth()+1).padStart(2, '0');
    const day = String(d.getDate()).padStart(2, '0');
    return `${y}-${m}-${day}`;
}

function last7Labels(endDate) {
    const labels = [];
    for (let i = 6; i >= 0; i--) {
        const d = new Date(endDate);
        d.setDate(d.getDate() - i);
        labels.push(formatDateOnly(d));
    }
    return labels;
}

async function loadWeek() {
    const from = document.getElementById('fromInput').value;
    const to = document.getElementById('toInput').value;
    const url = `/Statistics/WeeklyData?from=${encodeURIComponent(from)}&to=${encodeURIComponent(to)}`;
    const res = await fetch(url);
    const payload = await res.json();
    const arr = payload.daily || [];

    const map = new Map();
    arr.forEach(x => {
        const d = new Date(x.date);
        map.set(formatDateOnly(d), Number(x.revenue));
    });
    const start = new Date(payload.from);
    const end = new Date(payload.to);
    const labels = [];
    for (let d = new Date(start); d <= end; d.setDate(d.getDate()+1)) {
        labels.push(formatDateOnly(d));
    }
    const data = labels.map(k => map.get(k) || 0);

    // badges
    document.getElementById('badgeRange').innerText = `${start.toLocaleDateString()} - ${end.toLocaleDateString()}`;
    document.getElementById('badgeTotal').innerText = Number(payload.total || 0).toLocaleString() + 'đ';

    // chart
    const ctx = document.getElementById('weekChart');
    if (window.__weekChart) { window.__weekChart.destroy(); }
    window.__weekChart = new Chart(ctx, {
        type: 'line',
        data: { labels, datasets: [{ label: 'Revenue', data, borderColor: '#1976d2', backgroundColor: 'rgba(25,118,210,0.15)', tension: 0.2, fill: true }] },
        options: { responsive: true, scales: { y: { beginAtZero: true } } }
    });

    // vertical table per day
    const tbody = document.querySelector('#detailTable tbody');
    tbody.innerHTML = '';
    labels.forEach((lbl, i) => {
        const tr = document.createElement('tr');
        const td1 = document.createElement('td'); td1.textContent = new Date(lbl).toLocaleDateString();
        const td2 = document.createElement('td'); td2.textContent = Number(data[i]).toLocaleString() + 'đ';
        tr.appendChild(td1); tr.appendChild(td2);
        tbody.appendChild(tr);
    });
}
document.getElementById('btnLoad').addEventListener('click', loadWeek);
loadWeek();
</script>


